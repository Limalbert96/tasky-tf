name: 'Terraform CI/CD'

on:
  push:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'terraform/**'
      - '.github/workflows/terraform.yml'

permissions:
  contents: read
  pull-requests: write
  id-token: write # Required for GCP Workload Identity Federation

env:
  TF_LOG: INFO
  GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
  TF_WORKSPACE: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}
  TF_VAR_project_id: ${{ secrets.GOOGLE_PROJECT }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    
    # Add timeout to limit workflow execution time
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
        create_credentials_file: true
        cleanup_credentials: true
        export_environment_variables: true

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.5.0"
        terraform_wrapper: false

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}
        create_credentials_file: true
        cleanup_credentials: true
        export_environment_variables: true

    - name: Initialize Terraform
      run: terraform init
      env:
        GOOGLE_BACKEND_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}

    - name: Terraform Format Check
      run: terraform fmt -check -recursive
      
    - name: Run tfsec
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        soft_fail: false

    - name: Run checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: terraform
        soft_fail: false

    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      run: |
        terraform plan -no-color -input=false
      continue-on-error: true
      
    - name: Terraform Plan Status
      if: github.event_name == 'pull_request'
      run: |
        if [ "${{ steps.plan.outcome }}" == "failure" ]; then
          echo "Terraform Plan Failed!"
          exit 1
        fi

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        terraform apply -auto-approve -input=false
